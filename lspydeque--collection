#!/usr/bin/env eepython
###Deques are a generalization of stacks and queues (the name is pronounced “deck” and is short for “double-ended queue”).
###Deques support thread-safe, memory efficient appends and pops from either side of the deque
from collections import deque
##deque([iterable[, maxlen]]) --> deque object
d = deque('lo'); print d
##extend(iterable), extendleft(iterable)
d.extend('ves'); print d
##append(x), apend on both sides
d.append    ('physics')
d.appendleft('Evan')
print d
##iterate over the deque's elements
for elem in d:
    print elem.upper(),
##pop() on both sides
d.pop();     print d
d.popleft(); print d
##reverse
print reversed(d)
print deque(reversed(d))
print list(reversed(d))
##rotate
d.rotate(1);  print d
d.rotate(-1); print d
##slice just as list
print d[0], d[-1]
print 'o' in d
##clear
d.clear();    print d
