pygmentize -g <<"EOF"
#!/usr/bin/perl
#<> null filehandle 
  while (<>) { }  #is equivalent to the following Perl-like pseudo code:
  unshift(@ARGV, '-') unless @ARGV;
  while ($ARGV = shift) {
      open(ARGV, $ARGV);   #so <> open all the files (commandline arguments), and read in all lines
      while (<ARGV>) { }
  }
EOF

pygmentize -l sh <<"EOF"
#<>
  #$/ = ":";               #input seperator,line delimiter
  #$\ = "\n";              #output seperator
  perl -e '$/=":"; $line=<STDIN>; print("$line")' <<<"hi:no display"  #hi:
  perl -e '$/="."; $line=<>; print("$line")'      /etc/hosts          #127.

#<>  my view: while(<>) means "cat @ARGV | while read $_"
#$.  Current line number for the last filehandle accessed.
#good example:
  seq -f 'line%003g' 1 3 >/tmp/file1.txt
  seq -f 'line%003g' 4 6 >/tmp/file2.txt
  perl -e 'main(); sub main {while(<>){print "$. $_";}}' /tmp/file{1,2}.txt
  #1 line001
  #2 line002
  #3 line003
  #4 line004
  #5 line005
  #6 line006

EOF
