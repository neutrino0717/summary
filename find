##ignore case
find ~/graduation -iname  test\*                               #
find ~/graduation -iname "test*"                               #
find ~/graduation -iname "test*"                   -print      #
find ~/graduation -iname "test*" -size +1M         -print      #
find ~/graduation -iname "test*" -size +1M -type f -print      #
find ~/graduation -iname "test*" -size +1M -type f -exec ls -l {} +      #
find ~/graduation -iname "test*" -size +1k -type f -exec ls -l {} +      #
##exclude dir python and project*
find ~/graduation/ ! -path "*/python/*" ! -path "*/projects*/*"                                                                -name "*.py" -print
#problem,with 3 dirs included, for without -print, both side of -o will print by default
find ~/graduation/ \( -path ~/graduation/python -o -path ~/graduation/projects -o -path ~/graduation/projects_3rd \) -prune -o -name "*.py"        #no ok
find ~/graduation/ \( -path ~/graduation/python -o -path ~/graduation/projects -o -path ~/graduation/projects_3rd \) -prune -o -name "*.py" -print #OK
 
 
find . -type d \( -path dir1 -o -path dir2 -o -path dir3 \) -prune -o -print
 
##time
find ~/graduation -atime -0 -type f                #file access changed within 1 day (e.g. by cat,more)
find ~/graduation -ctime -0 -type f                #file inode  changed within 1 day (e.g. by chmod)
find ~/graduation -mtime -0 -type f                #file content changed within 1 day(e.g. by vi)
find ~/graduation -mtime -1 -type f                #file content changed within 1 day
find ~/graduation -mtime -n -type f                #file content changed within n days(n*24hours)
find ~/graduation -mtime  n -type f                #file content changed within n~n+1 days
find ~/graduation -mtime +n -type f                #file content changed more than n+1 days
find ~/graduation -mtime -1 -type d                #dir  content changed within 1 day
 
##or
find ~/graduation  -name "*.h" -o -name "*.c"                     #
find ~/graduation  -name "*.[hc]"                                 #
find ~/graduation  -name "*.[hc]" -print                          #
find ~/graduation  -name "*.[hc]" -exec grep --color     "unistd" {} \;   #
find ~/graduation  -name "*.[hc]" -exec grep --color -Hn "unistd" {} \;   #
find ~/graduation  -name "*.[hc]" -exec grep --color -Hn "unistd" {} ';'  #
find ~/graduation  -name "*.[hc]" -exec grep --color -Hn "unistd" {} ";"  #
find ~/graduation  -name "*.[hc]" -exec grep --color -Hn "unistd" {} +    #
 
##xargs
##how to handle space within a file name
##  find --print0 will use null character as delimter instead of default newline
##  xargs -0 will build argument list with null character as delimeter
find ~/graduation  -name "*.[hc]" -exec                            echo grep --color -Hn "unistd" {} \;   #
find ~/graduation  -name "*.[hc]" -exec                            echo grep --color -Hn "unistd" {} +    #
find ~/graduation  -name "*.[hc]" -print| tr "\n" "\0"| xargs -0    echo grep --color -Hn "unistd"
find ~/graduation  -name "*.[hc]" -print0             | xargs -0    echo grep --color -Hn "unistd"
find ~/graduation  -name "*.[hc]" -print0             | xargs -0 -i echo grep --color -Hn "unistd" {}      #not good, result in many grep commands
 
##\; or +
##a + sign instead of a semi-colon, will cause find to pass as many names as possible in one invocation of a command, 
##similar to the way xargs works 
find ~/graduation  -name "*.[hc]" -exec echo grep --color -Hn "unistd" {} \;   # once for each input file
find ~/graduation  -name "*.[hc]" -exec echo grep --color -Hn "unistd" {} +    # only once for all input files
find ~/graduation  -name "*.[hc]" -exec echo rm -f {} \;   # rm once for each input file
find ~/graduation  -name "*.[hc]" -exec echo rm -f {} +    # rm only once for all input files

##-mount Don't descend directories on other filesystems.  An alternate name for -xdev,
##-xdev  Don't descend directories on other filesystems
find /home -xdev -inum 422754 -print0| xargs -0 echo rm -f    #rm -f ./abc/hello ./hello
--------------------------------------------------------------------------------------
command: find / -path '/lab' -prune -o -name *.py
 
#exclude /lab
#-o
#expr1 -o expr2      means Or; expr2 is not evaluated if expr1 is true.
find / -path '/lab' -prune -o -name *.py -print
