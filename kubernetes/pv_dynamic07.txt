1. deployment -> pod -> pvc --> sc --> provisioner(pod) --> nfs
2. StatefulSet(volumeClaimTemplates) -> sc

apiVersion: v1
kind: Pod
metadata:
  name: busybox
spec:
  volumes:                              apiVersion: v1                        
  - name: hostvolume                    kind: PersistentVolumeClaim           
    persistentVolumeClaim:               metadata:                              apiVersion: storage.k8s.io/v1
      claimName: pvc1       --------->     name: pvc1                           kind: StorageClass
  containers:                            spec:                                  metadata:
  - image: busybox                         storageClassName: nfsstorage  ---->    name: nfsstorage
    name: busybox                          accessModes:                         provisioner: example.com/nfs ----|  #provisioner is a pod
    command: ["/bin/sh"]                     - ReadWriteMany                    parameters:                      |
    args: ["-c", "sleep 600"]              resources:                             archiveOnDelete: “false”       |
    volumeMounts:                            requests:                                                           |
    - name: hostvolume                        storage: 500Mi                                                     |
      mountPath: /mydata                                                                                         |
																												 |
																												 |
kind: Deployment                                                                                                 |
apiVersion: apps/v1                                                                                              |
metadata:                                                                                                        |
  name: nfs-client-provisioner                                                                                   |
spec:                                                                                                            |
  selector:                                                                                                      |
    matchLabels:                                                                                                 |
      app: nfs-client-provisioner                                                                                |
  replicas: 1                                                                                                    |
  strategy:                                                                                                      |
    type: Recreate                                                                                               |
  template:                                                                                                      |
    metadata:                                                                                                    |
      labels:                                                                                                    |
        app: nfs-client-provisioner                                                                              |
    spec:                                                                                                        |
      serviceAccountName: nfs-client-provisioner                                                                 |
      containers:                                                                                                |
        - name: nfs-client-provisioner                                                                           |
          image: quay.io/external_storage/nfs-client-provisioner:latest                                          |
          volumeMounts:                                                                                          |
            - name: nfs-client-root                                                                              |
              mountPath: /persistentvolumes                                                                      |
          env:                                                                                                   |
            - name: PROVISIONER_NAME                                                                             |
              value: example.com/nfs  <--------------------------------------------------------------------------|
            - name: NFS_SERVER
              value: 172.42.42.100    -----------------------------------------------------------------------|
            - name: NFS_PATH                                                                                 |
              value: /srv/nfs/kubedata ----------------------------------------------------------------|     |
      volumes:                                                                                         |     |
        - name: nfs-client-root                                                                        |     |
          nfs:                                                                                         |     |
            server: 172.42.42.100                                                                      |     |
            path: /srv/nfs/kubedata                                                                    |     |
																									   |     |
																									   |     |
																									   |     |
sudo mkdir /srv/nfs/kubedata -p                                                                        |     |
sudo chown nfsnobody: /srv/nfs/kubedata/                                                               |     |
sudo yum install -y nfs-utils                                                                          |     |d
sudo systemctl enable nfs-server                                                                       |     |
sudo systemctl start nfs-server                                                                        |     |
sudo vi /etc/exports                                                                                   |     |
  /srv/nfs/kubedata    *(rw,sync,no_subtree_check,no_root_squash,no_all_squash,insecure) <-------------|     |
sudo exportfs -rav                                                                                           |
sudo exportfs -v                                                                                             |
#tests                                                                                                       |
sudo mount -t nfs 172.42.42.100:/srv/nfs/kubedata /mnt  <----------------------------------------------------|
sudo umount /mnt

----------------------------------------------------------------------------------------------------------------------------------
https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
2. StatefulSet(volumeClaimTemplates) -> sc

							 apiVersion: apps/v1
apiVersion: v1               kind: StatefulSet
kind: Service                metadata:
metadata:                      name: web
  name: nginx                spec:
  labels:                      selector:
    app: nginx                   matchLabels:
spec:                              app: nginx # has to match .spec.template.metadata.labels
  ports:                       serviceName: "nginx"
  - port: 80                   replicas: 3 # by default is 1
    name: web                  template:
  clusterIP: None                metadata:
  selector:                        labels:
    app: nginx       ---->           app: nginx # has to match .spec.selector.matchLabels
	                             spec:
	                               terminationGracePeriodSeconds: 10
                                   containers:
                                   - name: nginx
                                     image: k8s.gcr.io/nginx-slim:0.8
                                     ports:
                                     - containerPort: 80
                                       name: web
                                     volumeMounts:               
                                     - name: www                 <---------|
                                       mountPath: /usr/share/nginx/html    |
                               volumeClaimTemplates:                       |
                               - metadata:                                 |
                                   name: www            -------------------|
                                 spec:
                                   accessModes: [ "ReadWriteOnce" ]
                                   storageClassName: "my-storage-class"
                                   resources:
                                     requests:
                                       storage: 1Gi

-----------------------------------------------------------------------------------------------------------------------------------
2. StatefulSet(volumeClaimTemplates) -> sc

keywords: 
provisioner
nfs_client
elasticsearch_master

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "myes"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: elasticsearch-master-headless
  selector:                                                                             apiVersion: v1                                                 
    matchLabels:                                                                        items:                                                         
      app: "elasticsearch-master"                                                       - allowVolumeExpansion: true                                   
  replicas: 3                                                                             apiVersion: storage.k8s.io/v1                                
  podManagementPolicy: Parallel                                                           kind: StorageClass                                           
  updateStrategy:                                                                         metadata:                                                    
    type: RollingUpdate                                                                     annotations:                                               
  volumeClaimTemplates:                                                                       storageclass.kubernetes.io/is-default-class: "true"      
  - metadata:                                                                                 storageclass.kubesphere.io/supported_access_modes: \     
      name: elasticsearch_master                                                        	  '["ReadWriteOnce","ReadOnlyMany","ReadWriteMany"]'       
    spec:                                                                                   creationTimestamp: "2020-06-29T03:03:49Z"                  
      accessModes:                                                                          labels:                                                    
      - ReadWriteOnce                                                                         app: nfs-client-provisioner                              
      resources:                                                                              chart: nfs-client-provisioner-1.1.2                      
        requests:                                                                             heritage: Tiller                                         
          storage: 30Gi                                                                       release: nfs-client                                      
      storageClassName: nfs_client             ------------>                                name: nfs_client                                           
  template:                                                                                 resourceVersion: "3208"                                    
    metadata:                                                                               selfLink: /apis/storage.k8s.io/v1/storageclasses/nfs-client
      name: "elasticsearch-master"                                                          uid: e94aac50-d037-4fba-b8eb-8a086eba78a3                  
      labels:                                                                             parameters:                                                  
        heritage: "Helm"                                                                    archiveOnDelete: "false"                                   
        release: "myes"                                                                   provisioner: cluster.local/nfs-client-nfs-client-provisioner 
        chart: "elasticsearch"                                                            reclaimPolicy: Delete                                        
        app: "elasticsearch-master"                                                       volumeBindingMode: Immediate                                 
      annotations:                                                                      kind: List                                                     
                                                                                        metadata:                                                      
    spec:                                                                                 resourceVersion: ""                                          
      containers:                                                                         selfLink: ""                                                 
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.2"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
          - name: "elasticsearch_master"
            mountPath: /usr/share/elasticsearch/data




-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

keywords: data, usr_share_elasticsearch_data， nfs-client, 30Gi

sh-4.2# df -h
Filesystem                                                                                                      Size  Used Avail Use% Mounted on
overlay                                                                                                         150G   57G   94G  38% /
tmpfs                                                                                                            64M     0   64M   0% /dev
tmpfs                                                                                                            16G     0   16G   0% /sys/fs/cgroup
/dev/mapper/centos-root                                                                                         150G   57G   94G  38% /etc/hosts
shm                                                                                                              64M     0   64M   0% /dev/shm
172.28.13.106:/home/kubesphere-nfs/elk-data-elk1-elasticsearch-data-1-pvc-15ceb029-36c3-4880-a170-9dbf2c0cb3c3  541G  107G  435G  20% /usr/share/elasticsearch/data   #usr_share_elasticsearch_data
tmpfs                                                                                                            16G   12K   16G   1% /run/secrets/kubernetes.io/serviceaccount
tmpfs                                                                                                            16G     0   16G   0% /proc/acpi
tmpfs                                                                                                            16G     0   16G   0% /proc/scsi
tmpfs                                                                                                            16G     0   16G   0% /sys/firmware
sh-4.2#
#stateset  																								   [root@master1 elastic-stack]# k get storageclass -o yaml
  volumeClaimTemplates:                                                                                        apiVersion: v1
    - metadata:                                                                                                items:
        name: data                                                                                             - allowVolumeExpansion: true
        creationTimestamp: null                                                                                  apiVersion: storage.k8s.io/v1
      spec:                                                                                                      kind: StorageClass
        accessModes:                                                                                             metadata:
          - ReadWriteOnce                                                                                          annotations:
        resources:                                                                                                   storageclass.kubernetes.io/is-default-class: "true"
          requests:                                                                                                  storageclass.kubesphere.io/supported_access_modes: '["ReadWriteOnce","ReadOnlyMany","ReadWriteMany"]'
            storage: 30Gi                                                                                          creationTimestamp: "2020-06-29T03:03:49Z"
        storageClassName: nfs-client                                                                               labels:
        volumeMode: Filesystem                                                                                       app: nfs-client-provisioner
      status:                                                                                                        chart: nfs-client-provisioner-1.1.2
        phase: Pending                                                                                               heritage: Tiller
		                                                                                                             release: nfs-client
		                                                                                                           name: nfs-client
          volumeMounts:                                                                                            resourceVersion: "3208"
            - name: data                                                                                           selfLink: /apis/storage.k8s.io/v1/storageclasses/nfs-client
              mountPath: /usr/share/elasticsearch/data     #usr_share_elasticsearch_data                           uid: e94aac50-d037-4fba-b8eb-8a086eba78a3
            - name: config                                                                                       parameters:
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml                                         archiveOnDelete: "false"
              subPath: elasticsearch.yml                                                                         provisioner: cluster.local/nfs-client-nfs-client-provisioner
                                                                                                                 reclaimPolicy: Delete
                                                                                                                 volumeBindingMode: Immediate
                                                                                                               kind: List
                                                                                                               metadata:
                                                                                                                 resourceVersion: ""
                                                                                                                 selfLink: ""
# PVC object created
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-elk1-elasticsearch-data-0
  namespace: elk
  labels:
    app: elasticsearch
    release: elk1
  annotations:
    pv.kubernetes.io/bind-completed: 'yes'
    pv.kubernetes.io/bound-by-controller: 'yes'
    volume.beta.kubernetes.io/storage-provisioner: cluster.local/nfs-client-nfs-client-provisioner
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  volumeName: pvc-301437ad-ede1-4637-add6-f9c64ac1df64
  storageClassName: nfs-client
  volumeMode: Filesystem






[root@master1 elastic-stack]# k get storageclass
NAME                   PROVISIONER                                       AGE
nfs-client (default)   cluster.local/nfs-client-nfs-client-provisioner   17d
[root@master1 elastic-stack]# k get storageclass -o yaml
apiVersion: v1
items:
- allowVolumeExpansion: true
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      storageclass.kubernetes.io/is-default-class: "true"
      storageclass.kubesphere.io/supported_access_modes: '["ReadWriteOnce","ReadOnlyMany","ReadWriteMany"]'
    creationTimestamp: "2020-06-29T03:03:49Z"
    labels:
      app: nfs-client-provisioner
      chart: nfs-client-provisioner-1.1.2
      heritage: Tiller
      release: nfs-client
    name: nfs-client
    resourceVersion: "3208"
    selfLink: /apis/storage.k8s.io/v1/storageclasses/nfs-client
    uid: e94aac50-d037-4fba-b8eb-8a086eba78a3
  parameters:
    archiveOnDelete: "false"
  provisioner: cluster.local/nfs-client-nfs-client-provisioner
  reclaimPolicy: Delete
  volumeBindingMode: Immediate
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""

















=======================================================================================================================


















