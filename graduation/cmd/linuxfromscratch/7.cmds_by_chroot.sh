#!/bin/bash


#!/bin/bash
#sudo cp ~neutrino0717/graduation/cmd/linuxfromscratch/7.cmds_by_chroot.sh /mnt/lfs/7.cmds_by_chroot_realtime.sh
#sudo chmod 777 /mnt/lfs/7.cmds_by_chroot_realtime.sh
#ln -s /mnt/lfs/7.cmds_by_chroot_realtime.sh

set -e
set -u
set -v
set -x
green='\e[0;32m'; blue='\e[0;34m'; red='\e[31m'; yellow='\e[0;33m'; endColor='\e[0m'
declare -A mtar
mtar=([bz2]=jxf [.gz]=zxf [.xz]=xf)
xcd(){
  pname=$1
  pdir=`echo ${pname}|sed -e 's/\.tar\..*$//'`
  grep -q "tcl" <<<"$pdir" && pdir=tcl8.6.6
  ext=${pname: -3}
  arg=${mtar[$ext]}
  cd /sources/${pdir}
  logfilecur="/log/`date -u +%y%m%d%H%M%S`${pname}.log"
  log_configure="/log/make/`date -u +%y%m%d%H%M%S`${pname}_configure.log"
  log_make="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make.log"
  log_make_check="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make_check.log"
  log_make_install="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make_install.log"
}
xtar(){
  pname=$1
  pdir=`echo ${pname}|sed -e 's/\.tar\..*$//'`
  grep -q "tcl" <<<"$pdir" && pdir=tcl8.6.6
  grep -q "attr-" <<<"$pdir" && pdir=attr-2.4.47
  grep -q "acl-" <<<"$pdir" && pdir=acl-2.2.52
  grep -q "vim-" <<<"$pdir" && pdir=vim74
  ext=${pname: -3}
  arg=${mtar[$ext]}
  echo -e "${red}=======$pname starting=======${endColor}" |tee -a /log/5.log
  cd /sources/ && rm -rf ${pdir} && tar ${arg} ${pname} && cd ${pdir}
  if [ "$?" != 0 ]; then
    echo "ERROR with xtar $pname"
    exit 1
  fi
  logfilecur="/log/`date -u +%y%m%d%H%M%S`${pname}.log"
  log_configure="/log/make/`date -u +%y%m%d%H%M%S`${pname}_configure.log"
  log_make="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make.log"
  log_make_check="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make_check.log"
  log_make_install="/log/make/`date -u +%y%m%d%H%M%S`${pname}_make_install.log"
}
savelog(){
  #{ find /bin /opt /sbin /usr /boot /etc /lib /var -type f | while read l; do md5sum $l|awk '{print $2" "$1}'; done; } > $logfilecur
  set +x
  find /bin /opt /sbin /usr /boot /etc /lib /var -type f | while read l; do md5sum $l|awk '{print $2" "$1}'; done > $logfilecur
  set -x
  #find / -type d \( -path /sources -o -path /lib64 \) -prune -o -type f | while read l; do md5sum $l|awk '{print $2" "$1}'; done > $logfilecur
  rm -rf /sources/$pdir
  echo -e "${green}=======$pname done=======${endColor}" |tee -a /log/5.log
}
#echo ${LOG_DIR}/log/`TZ='Asia/Shanghai' date +%y%m%d%H%M%S`${pname}.log
#exit 0
if [ "$(id -u -n)" != "root" ]; then echo "please run as chroot!"; exit 1; fi
#==================================================================#
#==================================================================#
xtar lfs-bootscripts-20150222.tar.bz2
make install > $log_make_install
savelog

#Creating Custom Udev Rules 
bash /lib/udev/init-net-rules.sh
cat /etc/udev/rules.d/70-persistent-net.rules
<<'EOF'
cat /etc/udev/rules.d/70-persistent-net.rules
# This file was automatically generated by the /lib/udev/write_net_rules
# program, run by the persistent-net-generator.rules rules file.
#
# You can modify it, as long as you keep each rule on a single
# line, and change only the value of the NAME= key.

# net device e1000
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:1d:58:2d", ATTR{dev_id}=="0x0", ATTR{type}=="1", NAME="eth0"

# net device e1000
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:9a:ab:45", ATTR{dev_id}=="0x0", ATTR{type}=="1", NAME="eth1"
root:/log#
EOF

#CD-ROM symlinks
sed -i -e 's/"write_cd_rules"/"write_cd_rules mode"/' \
    /etc/udev/rules.d/83-cdrom-symlinks.rules

#Dealing with duplicate devices 
cat > /etc/udev/rules.d/83-duplicate_devs.rules << "EOF"

# Persistent symlinks for webcam and tuner
KERNEL=="video*", ATTRS{idProduct}=="1910", ATTRS{idVendor}=="0d81", \
    SYMLINK+="webcam"
KERNEL=="video*", ATTRS{device}=="0x036f", ATTRS{vendor}=="0x109e", \
    SYMLINK+="tvtuner"

EOF

#Creating Network Interface Configuration Files 
cd /etc/sysconfig/
cat > ifconfig.eth0 << "EOF"
ONBOOT=yes
IFACE=eth0
SERVICE=ipv4-static
IP=192.168.1.2
GATEWAY=192.168.1.1
PREFIX=24
BROADCAST=192.168.1.255
EOF
cat > /etc/resolv.conf << "EOF"
# Begin /etc/resolv.conf

domain evencoding.com
nameserver 8.8.8.8

# End /etc/resolv.conf
EOF

echo "lfstest" > /etc/hostname

cat > /etc/hosts << "EOF"
# Begin /etc/hosts (network card version)

127.0.0.1 localhost
192.168.1.1 lfstest.evencoding.com

# End /etc/hosts (network card version)
EOF

#Configuring Sysvinit 
cat > /etc/inittab << "EOF"
# Begin /etc/inittab

id:3:initdefault:

si::sysinit:/etc/rc.d/init.d/rc S

l0:0:wait:/etc/rc.d/init.d/rc 0
l1:S1:wait:/etc/rc.d/init.d/rc 1
l2:2:wait:/etc/rc.d/init.d/rc 2
l3:3:wait:/etc/rc.d/init.d/rc 3
l4:4:wait:/etc/rc.d/init.d/rc 4
l5:5:wait:/etc/rc.d/init.d/rc 5
l6:6:wait:/etc/rc.d/init.d/rc 6

ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now

su:S016:once:/sbin/sulogin

1:2345:respawn:/sbin/agetty --noclear tty1 9600
2:2345:respawn:/sbin/agetty tty2 9600
3:2345:respawn:/sbin/agetty tty3 9600
4:2345:respawn:/sbin/agetty tty4 9600
5:2345:respawn:/sbin/agetty tty5 9600
6:2345:respawn:/sbin/agetty tty6 9600

# End /etc/inittab
EOF

#Configuring the System Clock
cat > /etc/sysconfig/clock << "EOF"
# Begin /etc/sysconfig/clock

UTC=1

# Set this to any options you might need to give to hwclock,
# such as machine hardware clock type for Alphas.
CLOCKPARAMS=

# End /etc/sysconfig/clock
EOF

#Configuring the Linux Console 
#The /etc/sysconfig/console file only controls the Linux text console localization. It has nothing to do with setting the proper keyboard layout and terminal fonts in the X Window System, with ssh sessions or with a serial console.
cat > /etc/sysconfig/console << "EOF"
# Begin /etc/sysconfig/console

KEYMAP="pl2"
FONT="lat2a-16 -m 8859-2"

# End /etc/sysconfig/console
EOF

# The files /etc/profile and ~/.bash_profile are read when the shell is invoked as an interactive login shell. 
cat > /etc/profile << "EOF"
# Begin /etc/profile

export LANG=en_US.UTF-8

# End /etc/profile
EOF

#The inputrc file handles keyboard mapping for specific situations.
cat > /etc/inputrc << "EOF"
# Begin /etc/inputrc
# Modified by Chris Lynn <roryo@roryo.dynup.net>

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc
EOF

#The shells file contains a list of login shells on the system. 
cat > /etc/shells << "EOF"
# Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells
EOF
