-t     Print the Command Along with Output
-p     Prompt User Before Execution
-n 2   Limit Output parameters number to 2 Per Line
-L 2   Limit Output Parameters number to 2 lines(non-empty) of arguments from standard input
-l     the same as -L 1

echo p{1..7}                                      #p1 p2 p3 p4 p5 p6 p7
echo p{1..7}   |xargs                             #p1 p2 p3 p4 p5 p6 p7   #default command is echo
echo p{1..7}   |xargs      echo                   #p1 p2 p3 p4 p5 p6 p7   #default command is echo
echo p{1..7}   |xargs -t   echo                   #p1 p2 p3 p4 p5 p6 p7   #default command is echo
echo p{1..7}   |xargs -p   echo                   #p1 p2 p3 p4 p5 p6 p7   #default command is echo
echo p{1..7}   |xargs -i   echo {}                #p1 p2 p3 p4 p5 p6 p7   #default command is echo
echo p{1..7}   |xargs -n 1 echo                   #1 argument  per command
echo p{1..7}   |xargs -n 2 echo                   #2 arguments per command
seq -f 'p%g' 7 |xargs -n 2 echo                   #2 arguments per command
echo p{1..7}   |xargs -n 2 echo |xargs -L 4 echo  #p1 p2 p3 p4 p5 p6 p7   #4 args per cmd, then 4 lines per cmd
echo p{1..7}   |xargs -n 4 echo |xargs -L 2 echo  #p1 p2 p3 p4 p5 p6 p7 
echo p{1..7}   |xargs -n 4 echo |xargs -L 2 echo  #p1 p2 p3 p4 p5 p6 p7
 
 
echo p{1..7} |xargs -n 3 -t
/bin/echo p1 p2 p3
p1 p2 p3
/bin/echo p4 p5 p6
p4 p5 p6
/bin/echo p7
p7
 
echo p{1..7} |xargs -n 3 -p
/bin/echo p1 p2 p3 ?...
/bin/echo p4 p5 p6 ?...
/bin/echo p7 ?...
 
ls *.sh | xargs -n 1 -i echo cp {} /backup
cp redirect.sh /backup
cp xargs.9.sh /backup
cp xargs--_i-_I.sh /backup
