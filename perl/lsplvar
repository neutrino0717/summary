pygmentize -g <<"EOF"
#!/usr/bin/perl
perl -e 'print $0';                                      #-bash
perl -e 'print $$';                                      #22724
perl -e 'system "cat /etc/nofile 2>/dev/null";print $?'  #256
perl -e 'open(FH,"<","/etc/nofile") or die "$!"'   #No such file or dir # retrieves the current value of the C "errno" integer variable.
perl -e 'print "@ARGV"'  a{1..3}                          #a1 a2 a3
perl -e 'print "$#ARGV"' a{1..3}                       #2
$0      #Contains the name of the program being executed. 
$$      #The process number of the Perl running this script.
$?      #or $CHILD_ERROR, get the return status in this variable of a system call or child process
$@      #If using eval, $@ contains the syntax error that the eval threw, if any.
@ARGV   #list of commandline arguments
$#ARGV  #the size of the array @ARGV minus 1

$_      #current variable
@_      #list of subroutine  arguments

$/ = ":";               #input seperator,line delimiter
$\ = "\n";              #output seperator
$.                      #Current line number for the last filehandle accessed.

EOF
