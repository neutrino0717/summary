pygmentize -g <<"EOF"
#!/usr/bin/perl
#grep: selects some or all of the elements from the original list
#map:Â  make changes to the values of the original list.

@arr1=(1..3);       map{$_=$_*2}(@arr1);   print " @arr1 \n"; #2 4 6
@arr1=(1..3); @arr2=map{$_*2}   (@arr1);   print " @arr2 \n"; #2 4 6
@arr1=qw(blue red);                 map{$_=uc($_)}(@arr1);  print "@arr1\n";  #BLUE RED
@arr1=qw(BLUE RED); @arr2=             map{lc($_)}(@arr1);  print "@arr2\n";  #blue red
@arr1=qw(BLUE RED); @arr2=             map{lc    }(@arr1);  print "@arr2\n";  #blue red
@arr1=qw(BLUE RED); @arr2=             map(lc,     @arr1);  print "@arr2\n";  #blue red
@arr1=qw(BLUE RED); @arr2=map(ucfirst, map(lc,     @arr1)); print "@arr2\n";  #Blue Red

@arr1=(0..3);       @arr2=grep{$_> 1}   @arr1; print "@arr2\n";  #2 3
@arr1=(0..3);       @arr2=grep{$_* 2}   @arr1; print "@arr2\n";  #1 2 3   #0 is false, so filtered
@arr1=(0..3);       @arr2=grep{$_*=2}   @arr1; print "@arr2\n";  #2 4 6

@arr1=qw(blue red); @arr2=grep{$_=~"ue"}@arr1; print "@arr2\n";  #blue
@arr1=qw(blue red); @arr2=grep{$_=~/ue/}@arr1; print "@arr2\n";  #blue
@arr1=qw(blue red); @arr2=grep{    /ue/}@arr1; print "@arr2\n";  #blue

EOF
